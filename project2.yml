AWSTemplateFormatVersion: 2010-09-09
Description: >
  Mighty Mensa - Udagram Project
Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resources
    Type: String
  VpcCidrBlock:
    Description: the IP range (CIDR notation)
    Type: String
    Default: 10.0.0.0/16
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidrBlock
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  # instace profile contains the IAM Role name(s) that we want to associate to our auto scaling EC2 Servers
  # never give too much permissions to your EC2 instances! if they get hacked, the permissions get hacked also!
  # in this example, I create a Role called UdacityS3ReadOnlyC2 and just give it a policy of S3 Read-Only Access
#   ProfileWithRolesForOurApp:
#     Type: AWS::IAM::InstanceProfile
#     Properties:
#       Roles:
#         - UdacityS3ReadOnlyEC2
# Outputs:
# This is also optional.
# Bonus points for useful outputs!
# for example, if you create a Load Balancer
# it's nice to output the URL to it here, so that we don't have to go to the console to get it.

# Sample UserData
# When creating your Launch Configuration, you may need a UserData script
# here's one that you can use for Ubuntu Linux that will:
# Install Apache Web Server, Start it, and create an index.html that will be displayed
# when you visit the IP address of this server with your web browser
#Here it is:
#
#          #!/bin/bash
#          apt-get update -y
#          apt-get install apache2 -y
#          systemctl start apache2.service
#          cd /var/www/html
#          echo "Udacity Demo Web Server Up and Running!" > index.html
